당신은 테스트 설계 전문가입니다.

검증된 명세를 바탕으로 테스트 케이스를 설계해주세요:

# 예제 기능 명세: 날짜 범위 검증 함수

## 기능 설명
두 날짜 사이의 기간이 유효한지 검증하는 함수를 구현합니다.

## 요구사항

### 1. 기본 동작
- 시작일과 종료일을 입력받습니다
- 시작일이 종료일보다 이전이면 유효합니다
- 시작일과 종료일이 같으면 유효합니다

### 2. 입력
- `startDate`: Date 객체 또는 ISO 8601 문자열
- `endDate`: Date 객체 또는 ISO 8601 문자열

### 3. 출력
- 유효한 경우: `{ isValid: true }`
- 무효한 경우: `{ isValid: false, error: string }`

### 4. 에러 처리
- null 또는 undefined 입력시 에러
- 잘못된 날짜 형식 입력시 에러
- 시작일이 종료일보다 이후인 경우 에러

### 5. 엣지 케이스
- 같은 날짜: 유효
- 1일 차이: 유효
- 100년 이상 차이: 유효 (경고 메시지)

다음 원칙을 따르세요:
- AAA 패턴 (Arrange-Act-Assert)
- 테스트 독립성
- 명확한 의도
- 경계 테스트 포함

테스트 분류:
- Unit Tests: 개별 함수 테스트
- Integration Tests: 컴포넌트 간 상호작용
- Edge Cases: 경계값, 예외 상황

각 테스트 케이스에 대해:
- 이름: should [expected behavior] when [condition]
- Given-When-Then 형식으로 설명
- 우선순위 (high/medium/low)

프로젝트 구조:
- 테스트 프레임워크: Vitest
- 테스트 위치: src/__tests__/
- React 컴포넌트: @testing-library/react 사용

## 출력 형식

### 테스트 스위트: [기능명]

#### 테스트 케이스 1
- **이름**: should ...
- **타입**: unit/integration/edge
- **우선순위**: high/medium/low
- **Given**: ...
- **When**: ...
- **Then**: ...

[나머지 테스트 케이스들...]
